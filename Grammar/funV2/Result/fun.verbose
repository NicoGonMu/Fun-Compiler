------------------
State  0

Kernel
( 0)  $accept	: _ S END_OF_INPUT 

Closure
( 0)  $accept	: _ S END_OF_INPUT 
( 1)  S	: _ PROG 
( 2)  PROG	: _ DECLS E 
( 3)  DECLS	: _ DECL DECLS 
( 4)  DECLS	: _ 
( 5)  DECL	: _ TYPEVAR_DECL 
( 6)  DECL	: _ TYPE_DECL 
( 7)  DECL	: _ DATA_DECL 
( 8)  DECL	: _ FUNC_DECL 
( 9)  DECL	: _ EQUATION 
( 10)  TYPEVAR_DECL	: _ RW_TYPEVAR LID SEMICOLON 
( 13)  TYPE_DECL	: _ RW_TYPE IDENTIFIER PARAMS COLON TUPLE_TYPE SEMICOLON 
( 14)  DATA_DECL	: _ RW_DATA IDENTIFIER PARAMS COLON ALTS SEMICOLON 
( 26)  FUNC_DECL	: _ RW_DEC IDENTIFIER COLON DESC SEMICOLON 
( 29)  EQUATION	: _ PATTERN_S IDENTIFIER PATTERN ASSIG_S E SEMICOLON 


	EQUATION 	goto  8
	FUNC_DECL 	goto  7
	DATA_DECL 	goto  6
	TYPE_DECL 	goto  5
	TYPEVAR_DECL 	goto  4
	DECL 	goto  3
	DECLS 	goto  2
	PROG 	goto  1
	S 	goto  14
 	PATTERN_S 	shift  13
 	RW_DEC 	shift  12
 	RW_TYPE 	shift  10
 	RW_DATA 	shift  11
 	RW_TYPEVAR 	shift  9
 	default 	reduce  4
------------------
State  1

Kernel
( 1)  S	: PROG _ 

Closure
( 1)  S	: PROG _ 


 	default 	reduce  1
------------------
State  2

Kernel
( 2)  PROG	: DECLS _ E 

Closure
( 2)  PROG	: DECLS _ E 
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  16
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  3

Kernel
( 3)  DECLS	: DECL _ DECLS 

Closure
( 3)  DECLS	: _ DECL DECLS 
( 3)  DECLS	: DECL _ DECLS 
( 4)  DECLS	: _ 
( 5)  DECL	: _ TYPEVAR_DECL 
( 6)  DECL	: _ TYPE_DECL 
( 7)  DECL	: _ DATA_DECL 
( 8)  DECL	: _ FUNC_DECL 
( 9)  DECL	: _ EQUATION 
( 10)  TYPEVAR_DECL	: _ RW_TYPEVAR LID SEMICOLON 
( 13)  TYPE_DECL	: _ RW_TYPE IDENTIFIER PARAMS COLON TUPLE_TYPE SEMICOLON 
( 14)  DATA_DECL	: _ RW_DATA IDENTIFIER PARAMS COLON ALTS SEMICOLON 
( 26)  FUNC_DECL	: _ RW_DEC IDENTIFIER COLON DESC SEMICOLON 
( 29)  EQUATION	: _ PATTERN_S IDENTIFIER PATTERN ASSIG_S E SEMICOLON 


	EQUATION 	goto  8
	FUNC_DECL 	goto  7
	DATA_DECL 	goto  6
	TYPE_DECL 	goto  5
	TYPEVAR_DECL 	goto  4
	DECL 	goto  3
	DECLS 	goto  30
 	PATTERN_S 	shift  13
 	RW_DEC 	shift  12
 	RW_TYPE 	shift  10
 	RW_DATA 	shift  11
 	RW_TYPEVAR 	shift  9
 	default 	reduce  4
------------------
State  4

Kernel
( 5)  DECL	: TYPEVAR_DECL _ 

Closure
( 5)  DECL	: TYPEVAR_DECL _ 


 	default 	reduce  5
------------------
State  5

Kernel
( 6)  DECL	: TYPE_DECL _ 

Closure
( 6)  DECL	: TYPE_DECL _ 


 	default 	reduce  6
------------------
State  6

Kernel
( 7)  DECL	: DATA_DECL _ 

Closure
( 7)  DECL	: DATA_DECL _ 


 	default 	reduce  7
------------------
State  7

Kernel
( 8)  DECL	: FUNC_DECL _ 

Closure
( 8)  DECL	: FUNC_DECL _ 


 	default 	reduce  8
------------------
State  8

Kernel
( 9)  DECL	: EQUATION _ 

Closure
( 9)  DECL	: EQUATION _ 


 	default 	reduce  9
------------------
State  9

Kernel
( 10)  TYPEVAR_DECL	: RW_TYPEVAR _ LID SEMICOLON 

Closure
( 10)  TYPEVAR_DECL	: RW_TYPEVAR _ LID SEMICOLON 
( 11)  LID	: _ LID COMMA IDENTIFIER 
( 12)  LID	: _ IDENTIFIER 


	LID 	goto  31
 	IDENTIFIER 	shift  32
 	default 	error
------------------
State  10

Kernel
( 13)  TYPE_DECL	: RW_TYPE _ IDENTIFIER PARAMS COLON TUPLE_TYPE SEMICOLON 

Closure
( 13)  TYPE_DECL	: RW_TYPE _ IDENTIFIER PARAMS COLON TUPLE_TYPE SEMICOLON 


 	IDENTIFIER 	shift  33
 	default 	error
------------------
State  11

Kernel
( 14)  DATA_DECL	: RW_DATA _ IDENTIFIER PARAMS COLON ALTS SEMICOLON 

Closure
( 14)  DATA_DECL	: RW_DATA _ IDENTIFIER PARAMS COLON ALTS SEMICOLON 


 	IDENTIFIER 	shift  34
 	default 	error
------------------
State  12

Kernel
( 26)  FUNC_DECL	: RW_DEC _ IDENTIFIER COLON DESC SEMICOLON 

Closure
( 26)  FUNC_DECL	: RW_DEC _ IDENTIFIER COLON DESC SEMICOLON 


 	IDENTIFIER 	shift  35
 	default 	error
------------------
State  13

Kernel
( 29)  EQUATION	: PATTERN_S _ IDENTIFIER PATTERN ASSIG_S E SEMICOLON 

Closure
( 29)  EQUATION	: PATTERN_S _ IDENTIFIER PATTERN ASSIG_S E SEMICOLON 


 	IDENTIFIER 	shift  36
 	default 	error
------------------
State  14

Kernel
( 0)  $accept	: S _ END_OF_INPUT 

Closure
( 0)  $accept	: S _ END_OF_INPUT 


 	END_OF_INPUT 	accept
 	default 	error
------------------
State  15

Kernel
( 34)  E	: O_PAR _ E C_PAR 
( 52)  TUPLE	: O_PAR _ LIST C_PAR 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 34)  E	: O_PAR _ E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 52)  TUPLE	: O_PAR _ LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 54)  LIST	: _ LIST COMMA E 
( 55)  LIST	: _ E 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LIST 	goto  39
	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  38
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  16

Kernel
( 2)  PROG	: DECLS E _ 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 

Closure
( 2)  PROG	: DECLS E _ 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 


 	CONC 	shift  48
 	AND_S 	shift  45
 	OR_S 	shift  46
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  2
------------------
State  17

Kernel
( 44)  E	: NOT_S _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 44)  E	: NOT_S _ E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  49
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  18

Kernel
( 45)  E	: SUB _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 45)  E	: SUB _ E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  50
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  19

Kernel
( 46)  E	: COND _ 

Closure
( 46)  E	: COND _ 


 	default 	reduce  46
------------------
State  20

Kernel
( 47)  E	: LIST_E _ 

Closure
( 47)  E	: LIST_E _ 


 	default 	reduce  47
------------------
State  21

Kernel
( 48)  E	: TUPLE _ 

Closure
( 48)  E	: TUPLE _ 


 	default 	reduce  48
------------------
State  22

Kernel
( 49)  E	: LITERAL _ 

Closure
( 49)  E	: LITERAL _ 


 	default 	reduce  49
------------------
State  23

Kernel
( 50)  E	: FCALL _ 

Closure
( 50)  E	: FCALL _ 


 	default 	reduce  50
------------------
State  24

Kernel
( 51)  COND	: RW_IF _ E RW_THEN E RW_ELSE E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 51)  COND	: RW_IF _ E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  51
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  25

Kernel
( 53)  LIST_E	: O_BRAQ _ LIST C_BRAQ 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 53)  LIST_E	: O_BRAQ _ LIST C_BRAQ 
( 54)  LIST	: _ LIST COMMA E 
( 55)  LIST	: _ E 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LIST 	goto  52
	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  53
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  26

Kernel
( 56)  LITERAL	: CHR_LIT _ 

Closure
( 56)  LITERAL	: CHR_LIT _ 


 	default 	reduce  56
------------------
State  27

Kernel
( 57)  LITERAL	: INT_LIT _ 

Closure
( 57)  LITERAL	: INT_LIT _ 


 	default 	reduce  57
------------------
State  28

Kernel
( 58)  LITERAL	: STR_LIT _ 

Closure
( 58)  LITERAL	: STR_LIT _ 


 	default 	reduce  58
------------------
State  29

Kernel
( 21)  FCALL	: IDENTIFIER _ PARAMS 

Closure
( 21)  FCALL	: IDENTIFIER _ PARAMS 
( 22)  PARAMS	: _ O_PAR EL C_PAR 
( 23)  PARAMS	: _ 


	PARAMS 	goto  55
 	O_PAR 	shift  54
 	default 	reduce  23
------------------
State  30

Kernel
( 3)  DECLS	: DECL DECLS _ 

Closure
( 3)  DECLS	: DECL DECLS _ 


 	default 	reduce  3
------------------
State  31

Kernel
( 10)  TYPEVAR_DECL	: RW_TYPEVAR LID _ SEMICOLON 
( 11)  LID	: LID _ COMMA IDENTIFIER 

Closure
( 10)  TYPEVAR_DECL	: RW_TYPEVAR LID _ SEMICOLON 
( 11)  LID	: LID _ COMMA IDENTIFIER 


 	SEMICOLON 	shift  56
 	COMMA 	shift  57
 	default 	error
------------------
State  32

Kernel
( 12)  LID	: IDENTIFIER _ 

Closure
( 12)  LID	: IDENTIFIER _ 


 	default 	reduce  12
------------------
State  33

Kernel
( 13)  TYPE_DECL	: RW_TYPE IDENTIFIER _ PARAMS COLON TUPLE_TYPE SEMICOLON 

Closure
( 13)  TYPE_DECL	: RW_TYPE IDENTIFIER _ PARAMS COLON TUPLE_TYPE SEMICOLON 
( 22)  PARAMS	: _ O_PAR EL C_PAR 
( 23)  PARAMS	: _ 


	PARAMS 	goto  58
 	O_PAR 	shift  54
 	default 	reduce  23
------------------
State  34

Kernel
( 14)  DATA_DECL	: RW_DATA IDENTIFIER _ PARAMS COLON ALTS SEMICOLON 

Closure
( 14)  DATA_DECL	: RW_DATA IDENTIFIER _ PARAMS COLON ALTS SEMICOLON 
( 22)  PARAMS	: _ O_PAR EL C_PAR 
( 23)  PARAMS	: _ 


	PARAMS 	goto  59
 	O_PAR 	shift  54
 	default 	reduce  23
------------------
State  35

Kernel
( 26)  FUNC_DECL	: RW_DEC IDENTIFIER _ COLON DESC SEMICOLON 

Closure
( 26)  FUNC_DECL	: RW_DEC IDENTIFIER _ COLON DESC SEMICOLON 


 	COLON 	shift  60
 	default 	error
------------------
State  36

Kernel
( 29)  EQUATION	: PATTERN_S IDENTIFIER _ PATTERN ASSIG_S E SEMICOLON 

Closure
( 29)  EQUATION	: PATTERN_S IDENTIFIER _ PATTERN ASSIG_S E SEMICOLON 
( 30)  PATTERN	: _ O_PAR LMODELS C_PAR 
( 31)  PATTERN	: _ 


	PATTERN 	goto  62
 	O_PAR 	shift  61
 	default 	reduce  31
------------------
State  37

Kernel
( 0)  $accept	: S END_OF_INPUT _ 

Closure
( 0)  $accept	: S END_OF_INPUT _ 


 	default 	error
------------------
State  38

Kernel
( 34)  E	: O_PAR E _ C_PAR 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 55)  LIST	: E _ 

Closure
( 34)  E	: O_PAR E _ C_PAR 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 55)  LIST	: E _ 


*** Conflict on input C_PAR
	Reduce  55	or	Shift  63

 	CONC 	shift  48
 	C_PAR 	shift  63
 	AND_S 	shift  45
 	OR_S 	shift  46
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  55
------------------
State  39

Kernel
( 52)  TUPLE	: O_PAR LIST _ C_PAR 
( 54)  LIST	: LIST _ COMMA E 

Closure
( 52)  TUPLE	: O_PAR LIST _ C_PAR 
( 54)  LIST	: LIST _ COMMA E 


 	C_PAR 	shift  64
 	COMMA 	shift  65
 	default 	error
------------------
State  40

Kernel
( 35)  E	: E PLUS _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 35)  E	: E PLUS _ E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  66
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  41

Kernel
( 36)  E	: E SUB _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 36)  E	: E SUB _ E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  67
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  42

Kernel
( 37)  E	: E PROD _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 37)  E	: E PROD _ E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  68
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  43

Kernel
( 38)  E	: E DIV _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 38)  E	: E DIV _ E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  69
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  44

Kernel
( 39)  E	: E MOD_OP _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 39)  E	: E MOD_OP _ E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  70
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  45

Kernel
( 40)  E	: E AND_S _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 40)  E	: E AND_S _ E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  71
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  46

Kernel
( 41)  E	: E OR_S _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 41)  E	: E OR_S _ E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  72
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  47

Kernel
( 42)  E	: E RELOP _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 42)  E	: E RELOP _ E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  73
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  48

Kernel
( 43)  E	: E CONC _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 43)  E	: E CONC _ E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  74
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  49

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 44)  E	: NOT_S E _ 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 44)  E	: NOT_S E _ 


 	CONC 	shift  48
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  44
------------------
State  50

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 45)  E	: SUB E _ 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 45)  E	: SUB E _ 


 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  45
------------------
State  51

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 51)  COND	: RW_IF E _ RW_THEN E RW_ELSE E 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 51)  COND	: RW_IF E _ RW_THEN E RW_ELSE E 


 	CONC 	shift  48
 	RW_THEN 	shift  75
 	AND_S 	shift  45
 	OR_S 	shift  46
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	error
------------------
State  52

Kernel
( 53)  LIST_E	: O_BRAQ LIST _ C_BRAQ 
( 54)  LIST	: LIST _ COMMA E 

Closure
( 53)  LIST_E	: O_BRAQ LIST _ C_BRAQ 
( 54)  LIST	: LIST _ COMMA E 


 	C_BRAQ 	shift  76
 	COMMA 	shift  65
 	default 	error
------------------
State  53

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 55)  LIST	: E _ 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 55)  LIST	: E _ 


 	CONC 	shift  48
 	AND_S 	shift  45
 	OR_S 	shift  46
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  55
------------------
State  54

Kernel
( 22)  PARAMS	: O_PAR _ EL C_PAR 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 22)  PARAMS	: O_PAR _ EL C_PAR 
( 24)  EL	: _ EL COMMA E 
( 25)  EL	: _ E 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	EL 	goto  77
	FCALL 	goto  23
	E 	goto  78
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  55

Kernel
( 21)  FCALL	: IDENTIFIER PARAMS _ 

Closure
( 21)  FCALL	: IDENTIFIER PARAMS _ 


 	default 	reduce  21
------------------
State  56

Kernel
( 10)  TYPEVAR_DECL	: RW_TYPEVAR LID SEMICOLON _ 

Closure
( 10)  TYPEVAR_DECL	: RW_TYPEVAR LID SEMICOLON _ 


 	default 	reduce  10
------------------
State  57

Kernel
( 11)  LID	: LID COMMA _ IDENTIFIER 

Closure
( 11)  LID	: LID COMMA _ IDENTIFIER 


 	IDENTIFIER 	shift  79
 	default 	error
------------------
State  58

Kernel
( 13)  TYPE_DECL	: RW_TYPE IDENTIFIER PARAMS _ COLON TUPLE_TYPE SEMICOLON 

Closure
( 13)  TYPE_DECL	: RW_TYPE IDENTIFIER PARAMS _ COLON TUPLE_TYPE SEMICOLON 


 	COLON 	shift  80
 	default 	error
------------------
State  59

Kernel
( 14)  DATA_DECL	: RW_DATA IDENTIFIER PARAMS _ COLON ALTS SEMICOLON 

Closure
( 14)  DATA_DECL	: RW_DATA IDENTIFIER PARAMS _ COLON ALTS SEMICOLON 


 	COLON 	shift  81
 	default 	error
------------------
State  60

Kernel
( 26)  FUNC_DECL	: RW_DEC IDENTIFIER COLON _ DESC SEMICOLON 

Closure
( 17)  TUPLE_TYPE	: _ TUPLE_TYPE CART_PROD C_TUPLE_TYPE 
( 18)  TUPLE_TYPE	: _ C_TUPLE_TYPE 
( 19)  C_TUPLE_TYPE	: _ FCALL 
( 20)  C_TUPLE_TYPE	: _ O_PAR TUPLE_TYPE ARROW TUPLE_TYPE C_PAR 
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 26)  FUNC_DECL	: RW_DEC IDENTIFIER COLON _ DESC SEMICOLON 
( 27)  DESC	: _ TUPLE_TYPE 
( 28)  DESC	: _ TUPLE_TYPE ARROW TUPLE_TYPE 


	DESC 	goto  86
	C_TUPLE_TYPE 	goto  83
	FCALL 	goto  84
	TUPLE_TYPE 	goto  82
 	O_PAR 	shift  85
 	IDENTIFIER 	shift  29
 	default 	error
------------------
State  61

Kernel
( 30)  PATTERN	: O_PAR _ LMODELS C_PAR 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 30)  PATTERN	: O_PAR _ LMODELS C_PAR 
( 32)  LMODELS	: _ LMODELS COMMA E 
( 33)  LMODELS	: _ E 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	LMODELS 	goto  87
	FCALL 	goto  23
	E 	goto  88
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  62

Kernel
( 29)  EQUATION	: PATTERN_S IDENTIFIER PATTERN _ ASSIG_S E SEMICOLON 

Closure
( 29)  EQUATION	: PATTERN_S IDENTIFIER PATTERN _ ASSIG_S E SEMICOLON 


 	ASSIG_S 	shift  89
 	default 	error
------------------
State  63

Kernel
( 34)  E	: O_PAR E C_PAR _ 

Closure
( 34)  E	: O_PAR E C_PAR _ 


 	default 	reduce  34
------------------
State  64

Kernel
( 52)  TUPLE	: O_PAR LIST C_PAR _ 

Closure
( 52)  TUPLE	: O_PAR LIST C_PAR _ 


 	default 	reduce  52
------------------
State  65

Kernel
( 54)  LIST	: LIST COMMA _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 54)  LIST	: LIST COMMA _ E 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  90
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  66

Kernel
( 35)  E	: E _ PLUS E 
( 35)  E	: E PLUS E _ 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 

Closure
( 35)  E	: E _ PLUS E 
( 35)  E	: E PLUS E _ 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 


 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  35
------------------
State  67

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 36)  E	: E SUB E _ 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 36)  E	: E SUB E _ 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 


 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  36
------------------
State  68

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 37)  E	: E PROD E _ 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 37)  E	: E PROD E _ 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 


 	default 	reduce  37
------------------
State  69

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 38)  E	: E DIV E _ 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 38)  E	: E DIV E _ 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 


 	default 	reduce  38
------------------
State  70

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 39)  E	: E MOD_OP E _ 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 39)  E	: E MOD_OP E _ 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 


 	default 	reduce  39
------------------
State  71

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 40)  E	: E AND_S E _ 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 40)  E	: E AND_S E _ 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 


 	CONC 	shift  48
 	OR_S 	shift  46
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  40
------------------
State  72

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 41)  E	: E OR_S E _ 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 41)  E	: E OR_S E _ 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 


 	CONC 	shift  48
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  41
------------------
State  73

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 42)  E	: E RELOP E _ 
( 43)  E	: E _ CONC E 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 42)  E	: E RELOP E _ 
( 43)  E	: E _ CONC E 


 	CONC 	error
 	RELOP 	error
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  42
------------------
State  74

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 43)  E	: E CONC E _ 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 43)  E	: E CONC E _ 


 	CONC 	error
 	RELOP 	error
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  43
------------------
State  75

Kernel
( 51)  COND	: RW_IF E RW_THEN _ E RW_ELSE E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 51)  COND	: RW_IF E RW_THEN _ E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  91
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  76

Kernel
( 53)  LIST_E	: O_BRAQ LIST C_BRAQ _ 

Closure
( 53)  LIST_E	: O_BRAQ LIST C_BRAQ _ 


 	default 	reduce  53
------------------
State  77

Kernel
( 22)  PARAMS	: O_PAR EL _ C_PAR 
( 24)  EL	: EL _ COMMA E 

Closure
( 22)  PARAMS	: O_PAR EL _ C_PAR 
( 24)  EL	: EL _ COMMA E 


 	C_PAR 	shift  92
 	COMMA 	shift  93
 	default 	error
------------------
State  78

Kernel
( 25)  EL	: E _ 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 

Closure
( 25)  EL	: E _ 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 


 	CONC 	shift  48
 	AND_S 	shift  45
 	OR_S 	shift  46
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  25
------------------
State  79

Kernel
( 11)  LID	: LID COMMA IDENTIFIER _ 

Closure
( 11)  LID	: LID COMMA IDENTIFIER _ 


 	default 	reduce  11
------------------
State  80

Kernel
( 13)  TYPE_DECL	: RW_TYPE IDENTIFIER PARAMS COLON _ TUPLE_TYPE SEMICOLON 

Closure
( 13)  TYPE_DECL	: RW_TYPE IDENTIFIER PARAMS COLON _ TUPLE_TYPE SEMICOLON 
( 17)  TUPLE_TYPE	: _ TUPLE_TYPE CART_PROD C_TUPLE_TYPE 
( 18)  TUPLE_TYPE	: _ C_TUPLE_TYPE 
( 19)  C_TUPLE_TYPE	: _ FCALL 
( 20)  C_TUPLE_TYPE	: _ O_PAR TUPLE_TYPE ARROW TUPLE_TYPE C_PAR 
( 21)  FCALL	: _ IDENTIFIER PARAMS 


	C_TUPLE_TYPE 	goto  83
	FCALL 	goto  84
	TUPLE_TYPE 	goto  94
 	O_PAR 	shift  85
 	IDENTIFIER 	shift  29
 	default 	error
------------------
State  81

Kernel
( 14)  DATA_DECL	: RW_DATA IDENTIFIER PARAMS COLON _ ALTS SEMICOLON 

Closure
( 14)  DATA_DECL	: RW_DATA IDENTIFIER PARAMS COLON _ ALTS SEMICOLON 
( 15)  ALTS	: _ ALTS DERIVATOR FCALL 
( 16)  ALTS	: _ FCALL 
( 21)  FCALL	: _ IDENTIFIER PARAMS 


	FCALL 	goto  96
	ALTS 	goto  95
 	IDENTIFIER 	shift  29
 	default 	error
------------------
State  82

Kernel
( 17)  TUPLE_TYPE	: TUPLE_TYPE _ CART_PROD C_TUPLE_TYPE 
( 27)  DESC	: TUPLE_TYPE _ 
( 28)  DESC	: TUPLE_TYPE _ ARROW TUPLE_TYPE 

Closure
( 17)  TUPLE_TYPE	: TUPLE_TYPE _ CART_PROD C_TUPLE_TYPE 
( 27)  DESC	: TUPLE_TYPE _ 
( 28)  DESC	: TUPLE_TYPE _ ARROW TUPLE_TYPE 


 	ARROW 	shift  98
 	CART_PROD 	shift  97
 	default 	reduce  27
------------------
State  83

Kernel
( 18)  TUPLE_TYPE	: C_TUPLE_TYPE _ 

Closure
( 18)  TUPLE_TYPE	: C_TUPLE_TYPE _ 


 	default 	reduce  18
------------------
State  84

Kernel
( 19)  C_TUPLE_TYPE	: FCALL _ 

Closure
( 19)  C_TUPLE_TYPE	: FCALL _ 


 	default 	reduce  19
------------------
State  85

Kernel
( 20)  C_TUPLE_TYPE	: O_PAR _ TUPLE_TYPE ARROW TUPLE_TYPE C_PAR 

Closure
( 17)  TUPLE_TYPE	: _ TUPLE_TYPE CART_PROD C_TUPLE_TYPE 
( 18)  TUPLE_TYPE	: _ C_TUPLE_TYPE 
( 19)  C_TUPLE_TYPE	: _ FCALL 
( 20)  C_TUPLE_TYPE	: _ O_PAR TUPLE_TYPE ARROW TUPLE_TYPE C_PAR 
( 20)  C_TUPLE_TYPE	: O_PAR _ TUPLE_TYPE ARROW TUPLE_TYPE C_PAR 
( 21)  FCALL	: _ IDENTIFIER PARAMS 


	C_TUPLE_TYPE 	goto  83
	FCALL 	goto  84
	TUPLE_TYPE 	goto  99
 	O_PAR 	shift  85
 	IDENTIFIER 	shift  29
 	default 	error
------------------
State  86

Kernel
( 26)  FUNC_DECL	: RW_DEC IDENTIFIER COLON DESC _ SEMICOLON 

Closure
( 26)  FUNC_DECL	: RW_DEC IDENTIFIER COLON DESC _ SEMICOLON 


 	SEMICOLON 	shift  100
 	default 	error
------------------
State  87

Kernel
( 30)  PATTERN	: O_PAR LMODELS _ C_PAR 
( 32)  LMODELS	: LMODELS _ COMMA E 

Closure
( 30)  PATTERN	: O_PAR LMODELS _ C_PAR 
( 32)  LMODELS	: LMODELS _ COMMA E 


 	C_PAR 	shift  101
 	COMMA 	shift  102
 	default 	error
------------------
State  88

Kernel
( 33)  LMODELS	: E _ 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 

Closure
( 33)  LMODELS	: E _ 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 


 	CONC 	shift  48
 	AND_S 	shift  45
 	OR_S 	shift  46
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  33
------------------
State  89

Kernel
( 29)  EQUATION	: PATTERN_S IDENTIFIER PATTERN ASSIG_S _ E SEMICOLON 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 29)  EQUATION	: PATTERN_S IDENTIFIER PATTERN ASSIG_S _ E SEMICOLON 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  103
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  90

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 54)  LIST	: LIST COMMA E _ 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 54)  LIST	: LIST COMMA E _ 


 	CONC 	shift  48
 	AND_S 	shift  45
 	OR_S 	shift  46
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  54
------------------
State  91

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 51)  COND	: RW_IF E RW_THEN E _ RW_ELSE E 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 51)  COND	: RW_IF E RW_THEN E _ RW_ELSE E 


 	CONC 	shift  48
 	RW_ELSE 	shift  104
 	AND_S 	shift  45
 	OR_S 	shift  46
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	error
------------------
State  92

Kernel
( 22)  PARAMS	: O_PAR EL C_PAR _ 

Closure
( 22)  PARAMS	: O_PAR EL C_PAR _ 


 	default 	reduce  22
------------------
State  93

Kernel
( 24)  EL	: EL COMMA _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 24)  EL	: EL COMMA _ E 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  105
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  94

Kernel
( 13)  TYPE_DECL	: RW_TYPE IDENTIFIER PARAMS COLON TUPLE_TYPE _ SEMICOLON 
( 17)  TUPLE_TYPE	: TUPLE_TYPE _ CART_PROD C_TUPLE_TYPE 

Closure
( 13)  TYPE_DECL	: RW_TYPE IDENTIFIER PARAMS COLON TUPLE_TYPE _ SEMICOLON 
( 17)  TUPLE_TYPE	: TUPLE_TYPE _ CART_PROD C_TUPLE_TYPE 


 	CART_PROD 	shift  97
 	SEMICOLON 	shift  106
 	default 	error
------------------
State  95

Kernel
( 14)  DATA_DECL	: RW_DATA IDENTIFIER PARAMS COLON ALTS _ SEMICOLON 
( 15)  ALTS	: ALTS _ DERIVATOR FCALL 

Closure
( 14)  DATA_DECL	: RW_DATA IDENTIFIER PARAMS COLON ALTS _ SEMICOLON 
( 15)  ALTS	: ALTS _ DERIVATOR FCALL 


 	DERIVATOR 	shift  108
 	SEMICOLON 	shift  107
 	default 	error
------------------
State  96

Kernel
( 16)  ALTS	: FCALL _ 

Closure
( 16)  ALTS	: FCALL _ 


 	default 	reduce  16
------------------
State  97

Kernel
( 17)  TUPLE_TYPE	: TUPLE_TYPE CART_PROD _ C_TUPLE_TYPE 

Closure
( 17)  TUPLE_TYPE	: TUPLE_TYPE CART_PROD _ C_TUPLE_TYPE 
( 19)  C_TUPLE_TYPE	: _ FCALL 
( 20)  C_TUPLE_TYPE	: _ O_PAR TUPLE_TYPE ARROW TUPLE_TYPE C_PAR 
( 21)  FCALL	: _ IDENTIFIER PARAMS 


	C_TUPLE_TYPE 	goto  109
	FCALL 	goto  84
 	O_PAR 	shift  85
 	IDENTIFIER 	shift  29
 	default 	error
------------------
State  98

Kernel
( 28)  DESC	: TUPLE_TYPE ARROW _ TUPLE_TYPE 

Closure
( 17)  TUPLE_TYPE	: _ TUPLE_TYPE CART_PROD C_TUPLE_TYPE 
( 18)  TUPLE_TYPE	: _ C_TUPLE_TYPE 
( 19)  C_TUPLE_TYPE	: _ FCALL 
( 20)  C_TUPLE_TYPE	: _ O_PAR TUPLE_TYPE ARROW TUPLE_TYPE C_PAR 
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 28)  DESC	: TUPLE_TYPE ARROW _ TUPLE_TYPE 


	C_TUPLE_TYPE 	goto  83
	FCALL 	goto  84
	TUPLE_TYPE 	goto  110
 	O_PAR 	shift  85
 	IDENTIFIER 	shift  29
 	default 	error
------------------
State  99

Kernel
( 17)  TUPLE_TYPE	: TUPLE_TYPE _ CART_PROD C_TUPLE_TYPE 
( 20)  C_TUPLE_TYPE	: O_PAR TUPLE_TYPE _ ARROW TUPLE_TYPE C_PAR 

Closure
( 17)  TUPLE_TYPE	: TUPLE_TYPE _ CART_PROD C_TUPLE_TYPE 
( 20)  C_TUPLE_TYPE	: O_PAR TUPLE_TYPE _ ARROW TUPLE_TYPE C_PAR 


 	ARROW 	shift  111
 	CART_PROD 	shift  97
 	default 	error
------------------
State  100

Kernel
( 26)  FUNC_DECL	: RW_DEC IDENTIFIER COLON DESC SEMICOLON _ 

Closure
( 26)  FUNC_DECL	: RW_DEC IDENTIFIER COLON DESC SEMICOLON _ 


 	default 	reduce  26
------------------
State  101

Kernel
( 30)  PATTERN	: O_PAR LMODELS C_PAR _ 

Closure
( 30)  PATTERN	: O_PAR LMODELS C_PAR _ 


 	default 	reduce  30
------------------
State  102

Kernel
( 32)  LMODELS	: LMODELS COMMA _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 32)  LMODELS	: LMODELS COMMA _ E 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  112
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  103

Kernel
( 29)  EQUATION	: PATTERN_S IDENTIFIER PATTERN ASSIG_S E _ SEMICOLON 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 

Closure
( 29)  EQUATION	: PATTERN_S IDENTIFIER PATTERN ASSIG_S E _ SEMICOLON 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 


 	CONC 	shift  48
 	SEMICOLON 	shift  113
 	AND_S 	shift  45
 	OR_S 	shift  46
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	error
------------------
State  104

Kernel
( 51)  COND	: RW_IF E RW_THEN E RW_ELSE _ E 

Closure
( 21)  FCALL	: _ IDENTIFIER PARAMS 
( 34)  E	: _ O_PAR E C_PAR 
( 35)  E	: _ E PLUS E 
( 36)  E	: _ E SUB E 
( 37)  E	: _ E PROD E 
( 38)  E	: _ E DIV E 
( 39)  E	: _ E MOD_OP E 
( 40)  E	: _ E AND_S E 
( 41)  E	: _ E OR_S E 
( 42)  E	: _ E RELOP E 
( 43)  E	: _ E CONC E 
( 44)  E	: _ NOT_S E 
( 45)  E	: _ SUB E 
( 46)  E	: _ COND 
( 47)  E	: _ LIST_E 
( 48)  E	: _ TUPLE 
( 49)  E	: _ LITERAL 
( 50)  E	: _ FCALL 
( 51)  COND	: _ RW_IF E RW_THEN E RW_ELSE E 
( 51)  COND	: RW_IF E RW_THEN E RW_ELSE _ E 
( 52)  TUPLE	: _ O_PAR LIST C_PAR 
( 53)  LIST_E	: _ O_BRAQ LIST C_BRAQ 
( 56)  LITERAL	: _ CHR_LIT 
( 57)  LITERAL	: _ INT_LIT 
( 58)  LITERAL	: _ STR_LIT 


	LITERAL 	goto  22
	TUPLE 	goto  21
	LIST_E 	goto  20
	COND 	goto  19
	FCALL 	goto  23
	E 	goto  114
 	O_PAR 	shift  15
 	O_BRAQ 	shift  25
 	RW_IF 	shift  24
 	IDENTIFIER 	shift  29
 	CHR_LIT 	shift  26
 	INT_LIT 	shift  27
 	STR_LIT 	shift  28
 	NOT_S 	shift  17
 	SUB 	shift  18
 	default 	error
------------------
State  105

Kernel
( 24)  EL	: EL COMMA E _ 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 

Closure
( 24)  EL	: EL COMMA E _ 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 


 	CONC 	shift  48
 	AND_S 	shift  45
 	OR_S 	shift  46
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  24
------------------
State  106

Kernel
( 13)  TYPE_DECL	: RW_TYPE IDENTIFIER PARAMS COLON TUPLE_TYPE SEMICOLON _ 

Closure
( 13)  TYPE_DECL	: RW_TYPE IDENTIFIER PARAMS COLON TUPLE_TYPE SEMICOLON _ 


 	default 	reduce  13
------------------
State  107

Kernel
( 14)  DATA_DECL	: RW_DATA IDENTIFIER PARAMS COLON ALTS SEMICOLON _ 

Closure
( 14)  DATA_DECL	: RW_DATA IDENTIFIER PARAMS COLON ALTS SEMICOLON _ 


 	default 	reduce  14
------------------
State  108

Kernel
( 15)  ALTS	: ALTS DERIVATOR _ FCALL 

Closure
( 15)  ALTS	: ALTS DERIVATOR _ FCALL 
( 21)  FCALL	: _ IDENTIFIER PARAMS 


	FCALL 	goto  115
 	IDENTIFIER 	shift  29
 	default 	error
------------------
State  109

Kernel
( 17)  TUPLE_TYPE	: TUPLE_TYPE CART_PROD C_TUPLE_TYPE _ 

Closure
( 17)  TUPLE_TYPE	: TUPLE_TYPE CART_PROD C_TUPLE_TYPE _ 


 	default 	reduce  17
------------------
State  110

Kernel
( 17)  TUPLE_TYPE	: TUPLE_TYPE _ CART_PROD C_TUPLE_TYPE 
( 28)  DESC	: TUPLE_TYPE ARROW TUPLE_TYPE _ 

Closure
( 17)  TUPLE_TYPE	: TUPLE_TYPE _ CART_PROD C_TUPLE_TYPE 
( 28)  DESC	: TUPLE_TYPE ARROW TUPLE_TYPE _ 


 	CART_PROD 	shift  97
 	default 	reduce  28
------------------
State  111

Kernel
( 20)  C_TUPLE_TYPE	: O_PAR TUPLE_TYPE ARROW _ TUPLE_TYPE C_PAR 

Closure
( 17)  TUPLE_TYPE	: _ TUPLE_TYPE CART_PROD C_TUPLE_TYPE 
( 18)  TUPLE_TYPE	: _ C_TUPLE_TYPE 
( 19)  C_TUPLE_TYPE	: _ FCALL 
( 20)  C_TUPLE_TYPE	: _ O_PAR TUPLE_TYPE ARROW TUPLE_TYPE C_PAR 
( 20)  C_TUPLE_TYPE	: O_PAR TUPLE_TYPE ARROW _ TUPLE_TYPE C_PAR 
( 21)  FCALL	: _ IDENTIFIER PARAMS 


	C_TUPLE_TYPE 	goto  83
	FCALL 	goto  84
	TUPLE_TYPE 	goto  116
 	O_PAR 	shift  85
 	IDENTIFIER 	shift  29
 	default 	error
------------------
State  112

Kernel
( 32)  LMODELS	: LMODELS COMMA E _ 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 

Closure
( 32)  LMODELS	: LMODELS COMMA E _ 
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 


 	CONC 	shift  48
 	AND_S 	shift  45
 	OR_S 	shift  46
 	RELOP 	shift  47
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  32
------------------
State  113

Kernel
( 29)  EQUATION	: PATTERN_S IDENTIFIER PATTERN ASSIG_S E SEMICOLON _ 

Closure
( 29)  EQUATION	: PATTERN_S IDENTIFIER PATTERN ASSIG_S E SEMICOLON _ 


 	default 	reduce  29
------------------
State  114

Kernel
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 51)  COND	: RW_IF E RW_THEN E RW_ELSE E _ 

Closure
( 35)  E	: E _ PLUS E 
( 36)  E	: E _ SUB E 
( 37)  E	: E _ PROD E 
( 38)  E	: E _ DIV E 
( 39)  E	: E _ MOD_OP E 
( 40)  E	: E _ AND_S E 
( 41)  E	: E _ OR_S E 
( 42)  E	: E _ RELOP E 
( 43)  E	: E _ CONC E 
( 51)  COND	: RW_IF E RW_THEN E RW_ELSE E _ 


 	CONC 	error
 	RELOP 	error
 	PLUS 	shift  40
 	SUB 	shift  41
 	PROD 	shift  42
 	DIV 	shift  43
 	MOD_OP 	shift  44
 	default 	reduce  51
------------------
State  115

Kernel
( 15)  ALTS	: ALTS DERIVATOR FCALL _ 

Closure
( 15)  ALTS	: ALTS DERIVATOR FCALL _ 


 	default 	reduce  15
------------------
State  116

Kernel
( 17)  TUPLE_TYPE	: TUPLE_TYPE _ CART_PROD C_TUPLE_TYPE 
( 20)  C_TUPLE_TYPE	: O_PAR TUPLE_TYPE ARROW TUPLE_TYPE _ C_PAR 

Closure
( 17)  TUPLE_TYPE	: TUPLE_TYPE _ CART_PROD C_TUPLE_TYPE 
( 20)  C_TUPLE_TYPE	: O_PAR TUPLE_TYPE ARROW TUPLE_TYPE _ C_PAR 


 	CART_PROD 	shift  97
 	C_PAR 	shift  117
 	default 	error
------------------
State  117

Kernel
( 20)  C_TUPLE_TYPE	: O_PAR TUPLE_TYPE ARROW TUPLE_TYPE C_PAR _ 

Closure
( 20)  C_TUPLE_TYPE	: O_PAR TUPLE_TYPE ARROW TUPLE_TYPE C_PAR _ 


 	default 	reduce  20
