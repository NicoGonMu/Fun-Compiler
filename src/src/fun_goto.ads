package Fun_Goto is

    type Small_Integer is range -32_000 .. 32_000;

    type Goto_Entry is record
        Nonterm  : Small_Integer;
        Newstate : Small_Integer;
    end record;

  --pragma suppress(index_check);

    subtype Row is Integer range -1 .. Integer'Last;

    type Goto_Parse_Table is array (Row range <>) of Goto_Entry;

    Goto_Matrix : constant Goto_Parse_Table :=
       ((-1,-1)  -- Dummy Entry.
-- State  0
,(-11, 8),(-10, 7),(-9, 6),(-8, 5)
,(-7, 4),(-6, 3),(-4, 2),(-3, 1)
,(-2, 14)
-- State  1

-- State  2
,(-25, 22),(-24, 21),(-23, 20)
,(-22, 19),(-16, 23),(-5, 16)
-- State  3
,(-11, 8)
,(-10, 7),(-9, 6),(-8, 5),(-7, 4)
,(-6, 3),(-4, 30)
-- State  4

-- State  5

-- State  6

-- State  7

-- State  8

-- State  9
,(-12, 31)
-- State  10

-- State  11

-- State  12

-- State  13

-- State  14

-- State  15
,(-26, 39)
,(-25, 22),(-24, 21),(-23, 20),(-22, 19)
,(-16, 23),(-5, 38)
-- State  16

-- State  17
,(-25, 22),(-24, 21)
,(-23, 20),(-22, 19),(-16, 23),(-5, 49)

-- State  18
,(-25, 22),(-24, 21),(-23, 20),(-22, 19)
,(-16, 23),(-5, 50)
-- State  19

-- State  20

-- State  21

-- State  22

-- State  23

-- State  24
,(-25, 22),(-24, 21)
,(-23, 20),(-22, 19),(-16, 23),(-5, 51)

-- State  25
,(-26, 52),(-25, 22),(-24, 21),(-23, 20)
,(-22, 19),(-16, 23),(-5, 53)
-- State  26

-- State  27

-- State  28

-- State  29
,(-13, 55)

-- State  30

-- State  31

-- State  32

-- State  33
,(-13, 58)
-- State  34
,(-13, 59)
-- State  35

-- State  36
,(-20, 62)
-- State  37

-- State  38

-- State  39

-- State  40
,(-25, 22)
,(-24, 21),(-23, 20),(-22, 19),(-16, 23)
,(-5, 66)
-- State  41
,(-25, 22),(-24, 21),(-23, 20)
,(-22, 19),(-16, 23),(-5, 67)
-- State  42
,(-25, 22)
,(-24, 21),(-23, 20),(-22, 19),(-16, 23)
,(-5, 68)
-- State  43
,(-25, 22),(-24, 21),(-23, 20)
,(-22, 19),(-16, 23),(-5, 69)
-- State  44
,(-25, 22)
,(-24, 21),(-23, 20),(-22, 19),(-16, 23)
,(-5, 70)
-- State  45
,(-25, 22),(-24, 21),(-23, 20)
,(-22, 19),(-16, 23),(-5, 71)
-- State  46
,(-25, 22)
,(-24, 21),(-23, 20),(-22, 19),(-16, 23)
,(-5, 72)
-- State  47
,(-25, 22),(-24, 21),(-23, 20)
,(-22, 19),(-16, 23),(-5, 73)
-- State  48
,(-25, 22)
,(-24, 21),(-23, 20),(-22, 19),(-16, 23)
,(-5, 74)
-- State  49

-- State  50

-- State  51

-- State  52

-- State  53

-- State  54
,(-25, 22),(-24, 21),(-23, 20)
,(-22, 19),(-18, 78),(-16, 23),(-5, 77)

-- State  55

-- State  56

-- State  57

-- State  58

-- State  59

-- State  60
,(-19, 86),(-17, 83),(-16, 84),(-14, 82)

-- State  61
,(-25, 22),(-24, 21),(-23, 20),(-22, 19)
,(-21, 87),(-16, 23),(-5, 88)
-- State  62

-- State  63

-- State  64

-- State  65
,(-25, 22)
,(-24, 21),(-23, 20),(-22, 19),(-16, 23)
,(-5, 90)
-- State  66

-- State  67

-- State  68

-- State  69

-- State  70

-- State  71

-- State  72

-- State  73

-- State  74

-- State  75
,(-25, 22),(-24, 21),(-23, 20)
,(-22, 19),(-16, 23),(-5, 91)
-- State  76

-- State  77

-- State  78

-- State  79

-- State  80
,(-17, 83)
,(-16, 84),(-14, 94)
-- State  81
,(-16, 96),(-15, 95)

-- State  82

-- State  83

-- State  84

-- State  85
,(-17, 83),(-16, 84),(-14, 99)
-- State  86

-- State  87

-- State  88

-- State  89
,(-25, 22)
,(-24, 21),(-23, 20),(-22, 19),(-16, 23)
,(-5, 103)
-- State  90

-- State  91

-- State  92

-- State  93
,(-25, 22),(-24, 21),(-23, 20)
,(-22, 19),(-16, 23),(-5, 105)
-- State  94

-- State  95

-- State  96

-- State  97
,(-17, 109)
,(-16, 84)
-- State  98
,(-17, 83),(-16, 84),(-14, 110)

-- State  99

-- State  100

-- State  101

-- State  102
,(-25, 22),(-24, 21),(-23, 20),(-22, 19)
,(-16, 23),(-5, 112)
-- State  103

-- State  104
,(-25, 22),(-24, 21)
,(-23, 20),(-22, 19),(-16, 23),(-5, 114)

-- State  105

-- State  106

-- State  107

-- State  108
,(-16, 115)
-- State  109

-- State  110

-- State  111
,(-17, 83),(-16, 84),(-14, 116)

-- State  112

-- State  113

-- State  114

-- State  115

-- State  116

-- State  117

);
--  The offset vector
GOTO_OFFSET : array (0.. 117) of Integer :=
( 0,
 9, 9, 15, 22, 22, 22, 22, 22, 22, 23,
 23, 23, 23, 23, 23, 30, 30, 36, 42, 42,
 42, 42, 42, 42, 48, 55, 55, 55, 55, 56,
 56, 56, 56, 57, 58, 58, 59, 59, 59, 59,
 65, 71, 77, 83, 89, 95, 101, 107, 113, 113,
 113, 113, 113, 113, 120, 120, 120, 120, 120, 120,
 124, 131, 131, 131, 131, 137, 137, 137, 137, 137,
 137, 137, 137, 137, 137, 143, 143, 143, 143, 143,
 146, 148, 148, 148, 148, 151, 151, 151, 151, 157,
 157, 157, 157, 163, 163, 163, 163, 165, 168, 168,
 168, 168, 174, 174, 180, 180, 180, 180, 181, 181,
 181, 184, 184, 184, 184, 184, 184);

subtype Rule        is Natural;
subtype Nonterminal is Integer;

   Rule_Length : array (Rule range  0 ..  58) of Natural := ( 2,
 1, 2, 2, 0, 1, 1, 1, 1,
 1, 3, 3, 1, 6, 6, 3, 1,
 3, 1, 1, 5, 2, 3, 0, 1,
 3, 5, 1, 3, 6, 3, 0, 3,
 1, 3, 3, 3, 3, 3, 3, 3,
 3, 3, 3, 2, 2, 1, 1, 1,
 1, 1, 6, 3, 3, 3, 1, 1,
 1, 1);
   Get_LHS_Rule: array (Rule range  0 ..  58) of Nonterminal := (-1,
-2,-3,-4,-4,-6,-6,-6,-6,
-6,-7,-12,-12,-8,-9,-15,-15,
-14,-14,-17,-17,-16,-13,-13,-18,
-18,-10,-19,-19,-11,-20,-20,-21,
-21,-5,-5,-5,-5,-5,-5,-5,
-5,-5,-5,-5,-5,-5,-5,-5,
-5,-5,-22,-24,-23,-26,-26,-25,
-25,-25);
end Fun_Goto;
